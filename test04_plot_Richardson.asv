addpath('./KPP');

Kv_iso = 1e-3;
dt = 0.1;
total_steps = 10 / dt;
Nz = 1000;
H  = 25; % m

m = Model(H, Nz, Kv_iso, dt);
m.showModelInfo();

slope_T = 5 / H;
slope_S = 1 / H;
T_sfc = 30;
S_sfc = 35;

m.state.T = T_sfc + slope_T * m.grid.z_T;
m.state.S = S_sfc + slope_S * m.grid.z_T;

dT = 2; dT_width = 5; dT_cent = -H/2;
dS = 0.5; dS_width = 3; dS_cent = -H/4;

gau = @(mag, cent, width) mag * exp(-( (m.grid.z_T - cent) / width ).^2 );

m.state.T = m.state.T + gau(dT, dT_cent, dT_width);
m.state.S = m.state.S + gau(dS, dS_cent, dS_width);
m.update_b();
m.update_Ri();

figure;

ax = {};

n=7
for i=1:n
    ax{i} = subplot(1, n, i);
end

varnames = { "T", "S", "b", "Ri", "di"
for
title(ax{1}, "T");
title(ax{2}, "S");
title(ax3, "b");
title(ax4, "Ri");
title(ax5, "diff b");
title(ax6, "diff u");
title(ax7, "Vtr_sqr");
ylabel(ax1, 'z (m)');

t(1) = 0;
int_S(1) = sum( m.grid.dz_T .* m.state.S);
int_T(1) = sum( m.grid.dz_T .* m.state.T);
int_b(1) = sum( m.grid.dz_T .* m.state.b);

for step = 1:total_steps

    
    t(end+1) = t(end) + dt;
    int_S(end+1) = sum( m.grid.dz_T .* m.state.S);
    int_T(end+1) = sum( m.grid.dz_T .* m.state.T);
    int_b(end+1) = sum( m.grid.dz_T .* m.state.b);
        
    if mod(step, 1) == 0
        [ Ri, db, du_sqr, Vt_sqr  ] = update_Ri(m);
        
        hold on all;
        
        plot(ax1, m.state.T, m.grid.z_T);
        plot(ax2, m.state.S, m.grid.z_T);
        plot(ax3, m.state.b, m.grid.z_T);
        plot(ax4, Ri, m.grid.z_T);
        plot(ax5, db, m.grid.z_T);
        plot(ax6, du_sqr, m.grid.z_T);
        plot(ax7, Vt_sqr, m.grid.z_T);
        
        hold off all;
        %pause(.1);
        

    end
    
    m.stepModel();
    
    
end


figure;
subplot(3,1,1);
plot(t, int_T);
title("Integrated T");

subplot(3,1,2);
plot(t, int_S);
title("Integrated S");

subplot(3,1,3);
plot(t, int_b);
title("Integrated b");
xlabel('time (s)');
